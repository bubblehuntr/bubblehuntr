name: Generate Snake

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: snake-${{ github.ref }}
  cancel-in-progress: false

jobs:
  generate:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true  # 用默认 GITHUB_TOKEN 推送

      - name: Generate github-contribution-grid-snake.svg
        uses: Platane/snk/svg-only@v3
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark

      - name: Commit & push to output (no extra secrets)
        shell: bash
        env:
          ACTOR: ${{ github.actor }}
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail

          # 以触发者身份作为 author（不需要 GH_EMAIL/USERNAME/PAT）
          git config user.name  "${ACTOR}"
          git config user.email "${ACTOR}@users.noreply.github.com"

          # 准备 output 分支工作区
          git fetch origin output || true
          rm -rf output-branch
          if git ls-remote --exit-code --heads origin output >/dev/null 2>&1; then
            git worktree add output-branch origin/output
          else
            git worktree add -b output output-branch
          fi

          # 拷贝生成物
          mkdir -p output-branch
          cp -f dist/*.svg output-branch/ || true

          cd output-branch

          # 仅在有变更时提交
          if [[ -n "$(git status --porcelain)" ]]; then
            git add -A
            git commit -m "chore: update snake SVGs [skip ci]"
            # 使用 actions/checkout 配置好的 origin（已带 GITHUB_TOKEN）推送
            git push origin HEAD:output
          else
            echo "No changes to commit."
          fi
